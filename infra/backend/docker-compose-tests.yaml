version: "3.9"

services:

  fastapi-test:
    container_name: ${MODE}-${APP_NAME}
    image: ${APP_NAME}
    build:
      context: ../../backend
      dockerfile: Dockerfile
      args:
        - MODE=${MODE}
    env_file:
      - ../../backend/env/.env-test
    command: sh -c "
      ./scripts/run_tests.sh
      "
    depends_on:
      alembic_migrations:
        condition: service_completed_successfully
    volumes:
      - ../../persistentdata/tests/logs:/home/unprivilegeduser/shortener/logs
      - ../../persistentdata/tests/htmlcov:/home/unprivilegeduser/shortener/htmlcov


  alembic_migrations:
    container_name: ${MODE}-alembic-migrations
    image: alembic-migrations
    build:
      context: ../../backend
      dockerfile: Dockerfile
    env_file:
      - ../../backend/env/.env-test
    command: sh -c "
      ./scripts/run_migrations.sh
      "
    depends_on:
      postgres:
        condition: service_healthy


  postgres:
    container_name: ${MODE}-postgres-${POSTGRES_VERSION}
    image: postgres:${POSTGRES_VERSION}
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - ../../persistentdata/tests/db:/var/lib/postgresql/data/
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 5s
      timeout: 2s
      retries: 5
      start_period: 2s
